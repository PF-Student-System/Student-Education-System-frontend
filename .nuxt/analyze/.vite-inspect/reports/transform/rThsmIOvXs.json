{
  "resolvedId": "G:/leanring_NUXTJS/Student-Education-System-frontend/pages/LecturesMod/capturing.vue",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "<template>\r\n    <div>\r\n      <button @click=\"startCapture(videoRef)\" :disabled=\"isCapturing\">Start Capture</button>\r\n      <button @click=\"stopCapture\" :disabled=\"!isCapturing\">Stop Capture</button>\r\n      <button @click=\"startSlideshow\" >Start Slideshow</button>\r\n      <button @click=\"stopSlideshow\" :disabled=\"!images.length || isCapturing\">Stop Slideshow</button>\r\n      <video ref=\"videoRef\" autoplay style=\"display: none;\"></video>\r\n      <canvas ref=\"canvasRef\" style=\"display: none;\"></canvas>\r\n      <img :src=\"currentImage\" alt=\"Current Frame\" v-if=\"currentImage\"/>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref } from 'vue';\r\n  import { useWebcamRecorder } from '@/mixins/WebRecorder';\r\n  const videoRef = ref(null);\r\n  const canvasRef = ref(null);\r\n  const { images, currentImage, isCapturing, startCapture, stopCapture, startSlideshow, stopSlideshow, downloadVideo } = useWebcamRecorder();\r\n  \r\n  const download = () => downloadVideo(canvasRef.value);\r\n  </script>\r\n  ",
      "start": 1709784864065,
      "end": 1709784864996,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709784864996,
      "end": 1709784864996,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "result": "import { unref as _unref, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\"\n\nconst _hoisted_1 = [\"disabled\"]\nconst _hoisted_2 = [\"disabled\"]\nconst _hoisted_3 = [\"disabled\"]\nconst _hoisted_4 = [\"src\"]\n\nimport { ref } from 'vue';\r\n  import { useWebcamRecorder } from '@/mixins/WebRecorder';\r\n  \nconst _sfc_main = {\n  __name: 'capturing',\n  setup(__props) {\n\r\n  const videoRef = ref(null);\r\n  const canvasRef = ref(null);\r\n  const { images, currentImage, isCapturing, startCapture, stopCapture, startSlideshow, stopSlideshow, downloadVideo } = useWebcamRecorder();\r\n  \r\n  const download = () => downloadVideo(canvasRef.value);\r\n  \nreturn (_ctx, _cache) => {\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"button\", {\n      onClick: _cache[0] || (_cache[0] = $event => (_unref(startCapture)(videoRef.value))),\n      disabled: _unref(isCapturing)\n    }, \"Start Capture\", 8, _hoisted_1),\n    _createElementVNode(\"button\", {\n      onClick: _cache[1] || (_cache[1] = (...args) => (_unref(stopCapture) && _unref(stopCapture)(...args))),\n      disabled: !_unref(isCapturing)\n    }, \"Stop Capture\", 8, _hoisted_2),\n    _createElementVNode(\"button\", {\n      onClick: _cache[2] || (_cache[2] = (...args) => (_unref(startSlideshow) && _unref(startSlideshow)(...args)))\n    }, \"Start Slideshow\"),\n    _createElementVNode(\"button\", {\n      onClick: _cache[3] || (_cache[3] = (...args) => (_unref(stopSlideshow) && _unref(stopSlideshow)(...args))),\n      disabled: !_unref(images).length || _unref(isCapturing)\n    }, \"Stop Slideshow\", 8, _hoisted_3),\n    _createElementVNode(\"video\", {\n      ref_key: \"videoRef\",\n      ref: videoRef,\n      autoplay: \"\",\n      style: {\"display\":\"none\"}\n    }, null, 512),\n    _createElementVNode(\"canvas\", {\n      ref_key: \"canvasRef\",\n      ref: canvasRef,\n      style: {\"display\":\"none\"}\n    }, null, 512),\n    (_unref(currentImage))\n      ? (_openBlock(), _createElementBlock(\"img\", {\n          key: 0,\n          src: _unref(currentImage),\n          alt: \"Current Frame\"\n        }, null, 8, _hoisted_4))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n}\n\n\n\nexport default _sfc_main",
      "start": 1709784864996,
      "end": 1709784864997,
      "order": "normal",
      "sourcemaps": {
        "mappings": ""
      }
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709784864997,
      "end": 1709784864997,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709784864998,
      "end": 1709784864998,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709784864998,
      "end": 1709784864998,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709784864998,
      "end": 1709784864998,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1709784864998,
      "end": 1709784864999,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709784864999,
      "end": 1709784864999,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709784864999,
      "end": 1709784864999,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709784865000,
      "end": 1709784865000,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709784865000,
      "end": 1709784865000,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709784865000,
      "end": 1709784865001,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709784865001,
      "end": 1709784865001,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709784865001,
      "end": 1709784865003,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709784865003,
      "end": 1709784865003,
      "order": "normal"
    }
  ]
}
