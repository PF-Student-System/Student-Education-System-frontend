{
  "resolvedId": "G:/leanring_NUXTJS/Student-Education-System-frontend/mixins/WebRecorder.ts",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { ref, onUnmounted } from 'vue';\r\n\r\nexport function useWebcamRecorder() {\r\n  const images = ref<string[]>([]);\r\n  const videoElement = ref<HTMLVideoElement | null>(null);\r\n  const isCapturing = ref<boolean>(false);\r\n  const currentImage = ref<string>('');\r\n  let captureInterval: NodeJS.Timeout | null = null;\r\n  let slideshowInterval: NodeJS.Timeout | null = null;\r\n\r\n  const startCapture = async (videoRef: HTMLVideoElement) => {\r\n    isCapturing.value = true;\r\n    videoElement.value = videoRef;\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoElement.value) {\r\n        videoElement.value.srcObject = stream;\r\n        videoElement.value.play();\r\n        clearInterval(captureInterval as NodeJS.Timeout);\r\n        captureInterval = setInterval(() => {\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = videoElement.value?.videoWidth || 0;\r\n          canvas.height = videoElement.value?.videoHeight || 0;\r\n          const context = canvas.getContext('2d');\r\n          context?.drawImage(videoElement.value as CanvasImageSource, 0, 0, canvas.width, canvas.height);\r\n          images.value.push(canvas.toDataURL('image/jpeg'));\r\n        }, 4000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing the webcam', error);\r\n    }\r\n  };\r\n\r\n  const stopCapture = () => {\r\n    isCapturing.value = false;\r\n    clearInterval(captureInterval as NodeJS.Timeout);\r\n    if (videoElement.value && videoElement.value.srcObject) {\r\n      const srcObject = videoElement.value.srcObject;\r\n      if (srcObject instanceof MediaStream) {\r\n        const tracks = srcObject.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n        videoElement.value.pause();\r\n        videoElement.value.srcObject = null;\r\n        alert(\"video files generated!\");\r\n      } else {\r\n        console.error(\"Invalid srcObject type:\", srcObject);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startSlideshow = () => {\r\n    if (images.value.length === 0) {\r\n      alert(\"No images captured to start the slideshow.\");\r\n      return;\r\n    }\r\n  \r\n    alert(\"Slideshow started!\"); // Alert the user that the slideshow has started.\r\n    let index = 0;\r\n    clearInterval(slideshowInterval as NodeJS.Timeout);\r\n    slideshowInterval = setInterval(() => {\r\n      if (index >= images.value.length) {\r\n        index = 0; // Loop back to the first image\r\n      }\r\n      currentImage.value = images.value[index++];\r\n    }, 1000);\r\n  };\r\n  \r\n\r\n  const stopSlideshow = () => {\r\n    clearInterval(slideshowInterval as NodeJS.Timeout);\r\n  };\r\n\r\n  onUnmounted(() => {\r\n    stopCapture();\r\n    stopSlideshow();\r\n  });\r\n\r\n  return {\r\n    images,\r\n    isCapturing,\r\n    currentImage,\r\n    videoElement,\r\n    startCapture,\r\n    stopCapture,\r\n    startSlideshow,\r\n    stopSlideshow,\r\n  };\r\n}\r\n",
      "start": 1709784865192,
      "end": 1709784865515,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709784865515,
      "end": 1709784865515,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709784865515,
      "end": 1709784865515,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709784865515,
      "end": 1709784865515,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709784865515,
      "end": 1709784865515,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "result": "import { ref, onUnmounted } from \"vue\";\nexport function useWebcamRecorder() {\n  const images = ref([]);\n  const videoElement = ref(null);\n  const isCapturing = ref(false);\n  const currentImage = ref(\"\");\n  let captureInterval = null;\n  let slideshowInterval = null;\n  const startCapture = async (videoRef) => {\n    isCapturing.value = true;\n    videoElement.value = videoRef;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoElement.value) {\n        videoElement.value.srcObject = stream;\n        videoElement.value.play();\n        clearInterval(captureInterval);\n        captureInterval = setInterval(() => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = videoElement.value?.videoWidth || 0;\n          canvas.height = videoElement.value?.videoHeight || 0;\n          const context = canvas.getContext(\"2d\");\n          context?.drawImage(videoElement.value, 0, 0, canvas.width, canvas.height);\n          images.value.push(canvas.toDataURL(\"image/jpeg\"));\n        }, 4e3);\n      }\n    } catch (error) {\n      console.error(\"Error accessing the webcam\", error);\n    }\n  };\n  const stopCapture = () => {\n    isCapturing.value = false;\n    clearInterval(captureInterval);\n    if (videoElement.value && videoElement.value.srcObject) {\n      const srcObject = videoElement.value.srcObject;\n      if (srcObject instanceof MediaStream) {\n        const tracks = srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n        videoElement.value.pause();\n        videoElement.value.srcObject = null;\n        alert(\"video files generated!\");\n      } else {\n        console.error(\"Invalid srcObject type:\", srcObject);\n      }\n    }\n  };\n  const startSlideshow = () => {\n    if (images.value.length === 0) {\n      alert(\"No images captured to start the slideshow.\");\n      return;\n    }\n    alert(\"Slideshow started!\");\n    let index = 0;\n    clearInterval(slideshowInterval);\n    slideshowInterval = setInterval(() => {\n      if (index >= images.value.length) {\n        index = 0;\n      }\n      currentImage.value = images.value[index++];\n    }, 1e3);\n  };\n  const stopSlideshow = () => {\n    clearInterval(slideshowInterval);\n  };\n  onUnmounted(() => {\n    stopCapture();\n    stopSlideshow();\n  });\n  return {\n    images,\n    isCapturing,\n    currentImage,\n    videoElement,\n    startCapture,\n    stopCapture,\n    startSlideshow,\n    stopSlideshow\n  };\n}\n",
      "start": 1709784865515,
      "end": 1709784865528,
      "order": "normal",
      "sourcemaps": {
        "version": 3,
        "sources": [
          "G:/leanring_NUXTJS/Student-Education-System-frontend/mixins/WebRecorder.ts"
        ],
        "sourcesContent": [
          "import { ref, onUnmounted } from 'vue';\r\n\r\nexport function useWebcamRecorder() {\r\n  const images = ref<string[]>([]);\r\n  const videoElement = ref<HTMLVideoElement | null>(null);\r\n  const isCapturing = ref<boolean>(false);\r\n  const currentImage = ref<string>('');\r\n  let captureInterval: NodeJS.Timeout | null = null;\r\n  let slideshowInterval: NodeJS.Timeout | null = null;\r\n\r\n  const startCapture = async (videoRef: HTMLVideoElement) => {\r\n    isCapturing.value = true;\r\n    videoElement.value = videoRef;\r\n\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoElement.value) {\r\n        videoElement.value.srcObject = stream;\r\n        videoElement.value.play();\r\n        clearInterval(captureInterval as NodeJS.Timeout);\r\n        captureInterval = setInterval(() => {\r\n          const canvas = document.createElement('canvas');\r\n          canvas.width = videoElement.value?.videoWidth || 0;\r\n          canvas.height = videoElement.value?.videoHeight || 0;\r\n          const context = canvas.getContext('2d');\r\n          context?.drawImage(videoElement.value as CanvasImageSource, 0, 0, canvas.width, canvas.height);\r\n          images.value.push(canvas.toDataURL('image/jpeg'));\r\n        }, 4000);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing the webcam', error);\r\n    }\r\n  };\r\n\r\n  const stopCapture = () => {\r\n    isCapturing.value = false;\r\n    clearInterval(captureInterval as NodeJS.Timeout);\r\n    if (videoElement.value && videoElement.value.srcObject) {\r\n      const srcObject = videoElement.value.srcObject;\r\n      if (srcObject instanceof MediaStream) {\r\n        const tracks = srcObject.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n        videoElement.value.pause();\r\n        videoElement.value.srcObject = null;\r\n        alert(\"video files generated!\");\r\n      } else {\r\n        console.error(\"Invalid srcObject type:\", srcObject);\r\n      }\r\n    }\r\n  };\r\n\r\n  const startSlideshow = () => {\r\n    if (images.value.length === 0) {\r\n      alert(\"No images captured to start the slideshow.\");\r\n      return;\r\n    }\r\n  \r\n    alert(\"Slideshow started!\"); // Alert the user that the slideshow has started.\r\n    let index = 0;\r\n    clearInterval(slideshowInterval as NodeJS.Timeout);\r\n    slideshowInterval = setInterval(() => {\r\n      if (index >= images.value.length) {\r\n        index = 0; // Loop back to the first image\r\n      }\r\n      currentImage.value = images.value[index++];\r\n    }, 1000);\r\n  };\r\n  \r\n\r\n  const stopSlideshow = () => {\r\n    clearInterval(slideshowInterval as NodeJS.Timeout);\r\n  };\r\n\r\n  onUnmounted(() => {\r\n    stopCapture();\r\n    stopSlideshow();\r\n  });\r\n\r\n  return {\r\n    images,\r\n    isCapturing,\r\n    currentImage,\r\n    videoElement,\r\n    startCapture,\r\n    stopCapture,\r\n    startSlideshow,\r\n    stopSlideshow,\r\n  };\r\n}\r\n"
        ],
        "mappings": "AAAA,SAAS,KAAK,mBAAmB;AAE1B,gBAAS,oBAAoB;AAClC,QAAM,SAAS,IAAc,CAAC,CAAC;AAC/B,QAAM,eAAe,IAA6B,IAAI;AACtD,QAAM,cAAc,IAAa,KAAK;AACtC,QAAM,eAAe,IAAY,EAAE;AACnC,MAAI,kBAAyC;AAC7C,MAAI,oBAA2C;AAE/C,QAAM,eAAe,OAAO,aAA+B;AACzD,gBAAY,QAAQ;AACpB,iBAAa,QAAQ;AAErB,QAAI;AACF,YAAM,SAAS,MAAM,UAAU,aAAa,aAAa,EAAE,OAAO,KAAK,CAAC;AACxE,UAAI,aAAa,OAAO;AACtB,qBAAa,MAAM,YAAY;AAC/B,qBAAa,MAAM,KAAK;AACxB,sBAAc,eAAiC;AAC/C,0BAAkB,YAAY,MAAM;AAClC,gBAAM,SAAS,SAAS,cAAc,QAAQ;AAC9C,iBAAO,QAAQ,aAAa,OAAO,cAAc;AACjD,iBAAO,SAAS,aAAa,OAAO,eAAe;AACnD,gBAAM,UAAU,OAAO,WAAW,IAAI;AACtC,mBAAS,UAAU,aAAa,OAA4B,GAAG,GAAG,OAAO,OAAO,OAAO,MAAM;AAC7F,iBAAO,MAAM,KAAK,OAAO,UAAU,YAAY,CAAC;AAAA,QAClD,GAAG,GAAI;AAAA,MACT;AAAA,IACF,SAAS,OAAO;AACd,cAAQ,MAAM,8BAA8B,KAAK;AAAA,IACnD;AAAA,EACF;AAEA,QAAM,cAAc,MAAM;AACxB,gBAAY,QAAQ;AACpB,kBAAc,eAAiC;AAC/C,QAAI,aAAa,SAAS,aAAa,MAAM,WAAW;AACtD,YAAM,YAAY,aAAa,MAAM;AACrC,UAAI,qBAAqB,aAAa;AACpC,cAAM,SAAS,UAAU,UAAU;AACnC,eAAO,QAAQ,WAAS,MAAM,KAAK,CAAC;AACpC,qBAAa,MAAM,MAAM;AACzB,qBAAa,MAAM,YAAY;AAC/B,cAAM,wBAAwB;AAAA,MAChC,OAAO;AACL,gBAAQ,MAAM,2BAA2B,SAAS;AAAA,MACpD;AAAA,IACF;AAAA,EACF;AAEA,QAAM,iBAAiB,MAAM;AAC3B,QAAI,OAAO,MAAM,WAAW,GAAG;AAC7B,YAAM,4CAA4C;AAClD;AAAA,IACF;AAEA,UAAM,oBAAoB;AAC1B,QAAI,QAAQ;AACZ,kBAAc,iBAAmC;AACjD,wBAAoB,YAAY,MAAM;AACpC,UAAI,SAAS,OAAO,MAAM,QAAQ;AAChC,gBAAQ;AAAA,MACV;AACA,mBAAa,QAAQ,OAAO,MAAM,OAAO;AAAA,IAC3C,GAAG,GAAI;AAAA,EACT;AAGA,QAAM,gBAAgB,MAAM;AAC1B,kBAAc,iBAAmC;AAAA,EACnD;AAEA,cAAY,MAAM;AAChB,gBAAY;AACZ,kBAAc;AAAA,EAChB,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACF;",
        "names": []
      }
    },
    {
      "name": "vite:json",
      "start": 1709784865528,
      "end": 1709784865528,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709784865528,
      "end": 1709784865528,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709784865528,
      "end": 1709784865528,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709784865528,
      "end": 1709784865528,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709784865529,
      "end": 1709784865529,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709784865529,
      "end": 1709784865529,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1709784865529,
      "end": 1709784865529,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709784865529,
      "end": 1709784865529,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709784865530,
      "end": 1709784865530,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709784865530,
      "end": 1709784865530,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1709784865530,
      "end": 1709784865530,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1709784865530,
      "end": 1709784865530,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709784865530,
      "end": 1709784865530,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709784865530,
      "end": 1709784865530,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709784865531,
      "end": 1709784865531,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709784865531,
      "end": 1709784865531,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709784865531,
      "end": 1709784865531,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709784865532,
      "end": 1709784865532,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709784865532,
      "end": 1709784865532,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { setInterval } from '#app/compat/interval';\nimport { ref, onUnmounted } from \"vue\";\nexport function useWebcamRecorder() {\n  const images = ref([]);\n  const videoElement = ref(null);\n  const isCapturing = ref(false);\n  const currentImage = ref(\"\");\n  let captureInterval = null;\n  let slideshowInterval = null;\n  const startCapture = async (videoRef) => {\n    isCapturing.value = true;\n    videoElement.value = videoRef;\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n      if (videoElement.value) {\n        videoElement.value.srcObject = stream;\n        videoElement.value.play();\n        clearInterval(captureInterval);\n        captureInterval = setInterval(() => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = videoElement.value?.videoWidth || 0;\n          canvas.height = videoElement.value?.videoHeight || 0;\n          const context = canvas.getContext(\"2d\");\n          context?.drawImage(videoElement.value, 0, 0, canvas.width, canvas.height);\n          images.value.push(canvas.toDataURL(\"image/jpeg\"));\n        }, 4e3);\n      }\n    } catch (error) {\n      console.error(\"Error accessing the webcam\", error);\n    }\n  };\n  const stopCapture = () => {\n    isCapturing.value = false;\n    clearInterval(captureInterval);\n    if (videoElement.value && videoElement.value.srcObject) {\n      const srcObject = videoElement.value.srcObject;\n      if (srcObject instanceof MediaStream) {\n        const tracks = srcObject.getTracks();\n        tracks.forEach((track) => track.stop());\n        videoElement.value.pause();\n        videoElement.value.srcObject = null;\n        alert(\"video files generated!\");\n      } else {\n        console.error(\"Invalid srcObject type:\", srcObject);\n      }\n    }\n  };\n  const startSlideshow = () => {\n    if (images.value.length === 0) {\n      alert(\"No images captured to start the slideshow.\");\n      return;\n    }\n    alert(\"Slideshow started!\");\n    let index = 0;\n    clearInterval(slideshowInterval);\n    slideshowInterval = setInterval(() => {\n      if (index >= images.value.length) {\n        index = 0;\n      }\n      currentImage.value = images.value[index++];\n    }, 1e3);\n  };\n  const stopSlideshow = () => {\n    clearInterval(slideshowInterval);\n  };\n  onUnmounted(() => {\n    stopCapture();\n    stopSlideshow();\n  });\n  return {\n    images,\n    isCapturing,\n    currentImage,\n    videoElement,\n    startCapture,\n    stopCapture,\n    startSlideshow,\n    stopSlideshow\n  };\n}\n",
      "start": 1709784865532,
      "end": 1709784865536,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChlC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvlD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzD,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnrhD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACdhC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACb,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC3C,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACZ,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrC,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB,CAAC,CAAC,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709784865536,
      "end": 1709784865536,
      "order": "normal"
    }
  ]
}
