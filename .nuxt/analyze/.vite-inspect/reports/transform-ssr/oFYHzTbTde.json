{
  "resolvedId": "D:/Programmer Force Training/build for mashood/Student-Education-System-frontend/mixins/screenshot.js",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import html2canvas from \"html2canvas\";\r\nexport default function screenshot () {\r\n      let  frames = [];\r\n      let intervalId;\r\n\r\n\r\n\r\n    async function takeScreenshot() {\r\n            intervalId = setInterval(takeScreenshotOnLoop , 10000)\r\n    }  \r\n\r\n    async function takeScreenshotOnLoop() {\r\n        const { scrollX, scrollY, innerWidth, innerHeight } = window;\r\n    \r\n        // Calculate the visible area after scrolling\r\n        const visibleArea = {\r\n            x: scrollX,\r\n            y: scrollY,\r\n            width: innerWidth,\r\n            height: innerHeight\r\n        };\r\n    \r\n        // Capture the screenshot of the visible area\r\n        const canvas = await html2canvas(document.documentElement, visibleArea);\r\n    \r\n        const imageUrl = canvas.toDataURL(); // Get the base64 encoded image URL\r\n        frames.push(imageUrl); // Store the image URL in the frames array\r\n    \r\n        console.log('Screenshot taken', frames); // Output frames array for debugging or tracking\r\n    \r\n        // Call takeScreenshotOnLoop again after a delay\r\n    }\r\n    \r\n\r\n     function stopCapture() {\r\n        clearInterval(intervalId);\r\n    }\r\n    return {\r\n        takeScreenshot,\r\n        stopCapture,\r\n        frames,\r\n    }\r\n}",
      "start": 1709725924802,
      "end": 1709725925188,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1709725925188,
      "end": 1709725925188,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1709725925188,
      "end": 1709725925189,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import html2canvas from \"html2canvas\";\nexport default function screenshot() {\n  let frames = [];\n  let intervalId;\n  async function takeScreenshot() {\n    intervalId = setInterval(takeScreenshotOnLoop, 1e4);\n  }\n  async function takeScreenshotOnLoop() {\n    const { scrollX, scrollY, innerWidth, innerHeight } = void 0;\n    const visibleArea = {\n      x: scrollX,\n      y: scrollY,\n      width: innerWidth,\n      height: innerHeight\n    };\n    const canvas = await html2canvas((void 0).documentElement, visibleArea);\n    const imageUrl = canvas.toDataURL();\n    frames.push(imageUrl);\n    console.log(\"Screenshot taken\", frames);\n  }\n  function stopCapture() {\n    clearInterval(intervalId);\n  }\n  return {\n    takeScreenshot,\n    stopCapture,\n    frames\n  };\n}\n",
      "start": 1709725925189,
      "end": 1709725925201,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Programmer Force Training/build for mashood/Student-Education-System-frontend/mixins/screenshot.js\"],\n  \"sourcesContent\": [\"import html2canvas from \\\"html2canvas\\\";\\r\\nexport default function screenshot () {\\r\\n      let  frames = [];\\r\\n      let intervalId;\\r\\n\\r\\n\\r\\n\\r\\n    async function takeScreenshot() {\\r\\n            intervalId = setInterval(takeScreenshotOnLoop , 10000)\\r\\n    }  \\r\\n\\r\\n    async function takeScreenshotOnLoop() {\\r\\n        const { scrollX, scrollY, innerWidth, innerHeight } = window;\\r\\n    \\r\\n        // Calculate the visible area after scrolling\\r\\n        const visibleArea = {\\r\\n            x: scrollX,\\r\\n            y: scrollY,\\r\\n            width: innerWidth,\\r\\n            height: innerHeight\\r\\n        };\\r\\n    \\r\\n        // Capture the screenshot of the visible area\\r\\n        const canvas = await html2canvas(document.documentElement, visibleArea);\\r\\n    \\r\\n        const imageUrl = canvas.toDataURL(); // Get the base64 encoded image URL\\r\\n        frames.push(imageUrl); // Store the image URL in the frames array\\r\\n    \\r\\n        console.log('Screenshot taken', frames); // Output frames array for debugging or tracking\\r\\n    \\r\\n        // Call takeScreenshotOnLoop again after a delay\\r\\n    }\\r\\n    \\r\\n\\r\\n     function stopCapture() {\\r\\n        clearInterval(intervalId);\\r\\n    }\\r\\n    return {\\r\\n        takeScreenshot,\\r\\n        stopCapture,\\r\\n        frames,\\r\\n    }\\r\\n}\"],\n  \"mappings\": \"AAAA,OAAO,iBAAiB;AACxB,wBAAwB,aAAc;AAChC,MAAK,SAAS,CAAC;AACf,MAAI;AAIN,iBAAe,iBAAiB;AACxB,iBAAa,YAAY,sBAAuB,GAAK;AAAA,EAC7D;AAEA,iBAAe,uBAAuB;AAClC,UAAM,EAAE,SAAS,SAAS,YAAY,YAAY,IAAI;AAGtD,UAAM,cAAc;AAAA,MAChB,GAAG;AAAA,MACH,GAAG;AAAA,MACH,OAAO;AAAA,MACP,QAAQ;AAAA,IACZ;AAGA,UAAM,SAAS,MAAM,YAAY,SAAS,iBAAiB,WAAW;AAEtE,UAAM,WAAW,OAAO,UAAU;AAClC,WAAO,KAAK,QAAQ;AAEpB,YAAQ,IAAI,oBAAoB,MAAM;AAAA,EAG1C;AAGC,WAAS,cAAc;AACpB,kBAAc,UAAU;AAAA,EAC5B;AACA,SAAO;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACJ;AACJ;\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1709725925201,
      "end": 1709725925201,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1709725925201,
      "end": 1709725925201,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1709725925201,
      "end": 1709725925201,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1709725925201,
      "end": 1709725925202,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1709725925202,
      "end": 1709725925202,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1709725925202,
      "end": 1709725925202,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1709725925203,
      "end": 1709725925203,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709725925204,
      "end": 1709725925204,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1709725925204,
      "end": 1709725925204,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { setInterval } from '#app/compat/interval';\nimport html2canvas from \"html2canvas\";\nexport default function screenshot() {\n  let frames = [];\n  let intervalId;\n  async function takeScreenshot() {\n    intervalId = setInterval(takeScreenshotOnLoop, 1e4);\n  }\n  async function takeScreenshotOnLoop() {\n    const { scrollX, scrollY, innerWidth, innerHeight } = void 0;\n    const visibleArea = {\n      x: scrollX,\n      y: scrollY,\n      width: innerWidth,\n      height: innerHeight\n    };\n    const canvas = await html2canvas((void 0).documentElement, visibleArea);\n    const imageUrl = canvas.toDataURL();\n    frames.push(imageUrl);\n    console.log(\"Screenshot taken\", frames);\n  }\n  function stopCapture() {\n    clearInterval(intervalId);\n  }\n  return {\n    takeScreenshot,\n    stopCapture,\n    frames\n  };\n}\n",
      "start": 1709725925204,
      "end": 1709725925206,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    },
    {
      "name": "nuxt:imports-transform",
      "result": "import { setInterval } from '#app/compat/interval';\nimport html2canvas from \"html2canvas\";\nexport default function screenshot() {\n  let frames = [];\n  let intervalId;\n  async function takeScreenshot() {\n    intervalId = setInterval(takeScreenshotOnLoop, 1e4);\n  }\n  async function takeScreenshotOnLoop() {\n    const { scrollX, scrollY, innerWidth, innerHeight } = void 0;\n    const visibleArea = {\n      x: scrollX,\n      y: scrollY,\n      width: innerWidth,\n      height: innerHeight\n    };\n    const canvas = await html2canvas((void 0).documentElement, visibleArea);\n    const imageUrl = canvas.toDataURL();\n    frames.push(imageUrl);\n    console.log(\"Screenshot taken\", frames);\n  }\n  function stopCapture() {\n    clearInterval(intervalId);\n  }\n  return {\n    takeScreenshot,\n    stopCapture,\n    frames\n  };\n}\n",
      "start": 1709725925204,
      "end": 1709725925206,
      "order": "post",
      "sourcemaps": {
        "version": 3,
        "sources": [
          ""
        ],
        "names": [],
        "mappings": ";AAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACtC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACjB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACzxC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B,CAAC,CAAC,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACV,CAAC,CAAC,CAAC,CAAC;AACJ,CAAC;"
      }
    },
    {
      "name": "unctx:transform",
      "start": 1709725925206,
      "end": 1709725925206,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1709725925206,
      "end": 1709725925206,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709725925206,
      "end": 1709725925206,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1709725925206,
      "end": 1709725925206,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1709725925206,
      "end": 1709725925206,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1709725925207,
      "end": 1709725925207,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1709725925207,
      "end": 1709725925207,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1709725925207,
      "end": 1709725925207,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1709725925207,
      "end": 1709725925208,
      "order": "normal"
    }
  ]
}
